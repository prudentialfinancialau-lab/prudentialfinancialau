//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** References another document, used as a foreign key */
  Reference: { input: any; output: any; }
  JSON: { input: any; output: any; }
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String']['output'];
  title?: Maybe<Scalars['String']['output']>;
  basename: Scalars['String']['output'];
  hasReferences?: Maybe<Scalars['Boolean']['output']>;
  breadcrumbs: Array<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  relativePath: Scalars['String']['output'];
  extension: Scalars['String']['output'];
  template: Scalars['String']['output'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Folder = {
  __typename?: 'Folder';
  name: Scalars['String']['output'];
  path: Scalars['String']['output'];
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean']['output'];
  hasNextPage: Scalars['Boolean']['output'];
  startCursor: Scalars['String']['output'];
  endCursor: Scalars['String']['output'];
};

export type Node = {
  id: Scalars['ID']['output'];
};

export type Document = {
  id: Scalars['ID']['output'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON']['output'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float']['output'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']['output']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  homePage: HomePage;
  homePageConnection: HomePageConnection;
  aboutPage: AboutPage;
  aboutPageConnection: AboutPageConnection;
  lendersPage: LendersPage;
  lendersPageConnection: LendersPageConnection;
  contactPage: ContactPage;
  contactPageConnection: ContactPageConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String']['input'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryHomePageArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryHomePageConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<HomePageFilter>;
};


export type QueryAboutPageArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryAboutPageConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<AboutPageFilter>;
};


export type QueryLendersPageArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryLendersPageConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<LendersPageFilter>;
};


export type QueryContactPageArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryContactPageConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<ContactPageFilter>;
};

export type DocumentFilter = {
  homePage?: InputMaybe<HomePageFilter>;
  aboutPage?: InputMaybe<AboutPageFilter>;
  lendersPage?: InputMaybe<LendersPageFilter>;
  contactPage?: InputMaybe<ContactPageFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  label?: Maybe<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  format?: Maybe<Scalars['String']['output']>;
  matches?: Maybe<Scalars['String']['output']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<DocumentFilter>;
  folder?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentNode = HomePage | AboutPage | LendersPage | ContactPage | Folder;

export type HomePageHero = {
  __typename?: 'HomePageHero';
  breadcrumb?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  buttonText?: Maybe<Scalars['String']['output']>;
  formTitle?: Maybe<Scalars['String']['output']>;
  heroImage?: Maybe<Scalars['String']['output']>;
};

export type HomePageAbout = {
  __typename?: 'HomePageAbout';
  label?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  paragraph1?: Maybe<Scalars['String']['output']>;
  paragraph2?: Maybe<Scalars['String']['output']>;
  quote?: Maybe<Scalars['String']['output']>;
  quoteAuthor?: Maybe<Scalars['String']['output']>;
  stat1Value?: Maybe<Scalars['String']['output']>;
  stat1Label?: Maybe<Scalars['String']['output']>;
  stat2Value?: Maybe<Scalars['String']['output']>;
  stat2Label?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
};

export type HomePageHelpFeatures = {
  __typename?: 'HomePageHelpFeatures';
  icon?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
};

export type HomePageHelp = {
  __typename?: 'HomePageHelp';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  statValue?: Maybe<Scalars['String']['output']>;
  statLabel?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  features?: Maybe<Array<Maybe<HomePageHelpFeatures>>>;
};

export type HomePageCalculator = {
  __typename?: 'HomePageCalculator';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
};

export type HomePageLendersLenderList = {
  __typename?: 'HomePageLendersLenderList';
  name?: Maybe<Scalars['String']['output']>;
  logo?: Maybe<Scalars['String']['output']>;
};

export type HomePageLenders = {
  __typename?: 'HomePageLenders';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  lenderList?: Maybe<Array<Maybe<HomePageLendersLenderList>>>;
};

export type HomePageContact = {
  __typename?: 'HomePageContact';
  title?: Maybe<Scalars['String']['output']>;
  mapUrl?: Maybe<Scalars['String']['output']>;
  location?: Maybe<Scalars['String']['output']>;
};

export type HomePageNewsletter = {
  __typename?: 'HomePageNewsletter';
  title?: Maybe<Scalars['String']['output']>;
};

export type HomePageHeader = {
  __typename?: 'HomePageHeader';
  phone?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  logo?: Maybe<Scalars['String']['output']>;
  facebookUrl?: Maybe<Scalars['String']['output']>;
  twitterUrl?: Maybe<Scalars['String']['output']>;
  linkedinUrl?: Maybe<Scalars['String']['output']>;
  youtubeUrl?: Maybe<Scalars['String']['output']>;
};

export type HomePageFooterAddress = {
  __typename?: 'HomePageFooterAddress';
  line1?: Maybe<Scalars['String']['output']>;
  line2?: Maybe<Scalars['String']['output']>;
  line3?: Maybe<Scalars['String']['output']>;
};

export type HomePageFooter = {
  __typename?: 'HomePageFooter';
  logo?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  address?: Maybe<HomePageFooterAddress>;
  email?: Maybe<Scalars['String']['output']>;
  copyright?: Maybe<Scalars['String']['output']>;
};

export type HomePage = Node & Document & {
  __typename?: 'HomePage';
  hero?: Maybe<HomePageHero>;
  about?: Maybe<HomePageAbout>;
  help?: Maybe<HomePageHelp>;
  calculator?: Maybe<HomePageCalculator>;
  lenders?: Maybe<HomePageLenders>;
  contact?: Maybe<HomePageContact>;
  newsletter?: Maybe<HomePageNewsletter>;
  header?: Maybe<HomePageHeader>;
  footer?: Maybe<HomePageFooter>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type HomePageHeroFilter = {
  breadcrumb?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  buttonText?: InputMaybe<StringFilter>;
  formTitle?: InputMaybe<StringFilter>;
  heroImage?: InputMaybe<ImageFilter>;
};

export type HomePageAboutFilter = {
  label?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  paragraph1?: InputMaybe<StringFilter>;
  paragraph2?: InputMaybe<StringFilter>;
  quote?: InputMaybe<StringFilter>;
  quoteAuthor?: InputMaybe<StringFilter>;
  stat1Value?: InputMaybe<StringFilter>;
  stat1Label?: InputMaybe<StringFilter>;
  stat2Value?: InputMaybe<StringFilter>;
  stat2Label?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type HomePageHelpFeaturesFilter = {
  icon?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
};

export type HomePageHelpFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  statValue?: InputMaybe<StringFilter>;
  statLabel?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  features?: InputMaybe<HomePageHelpFeaturesFilter>;
};

export type HomePageCalculatorFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
};

export type HomePageLendersLenderListFilter = {
  name?: InputMaybe<StringFilter>;
  logo?: InputMaybe<ImageFilter>;
};

export type HomePageLendersFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  lenderList?: InputMaybe<HomePageLendersLenderListFilter>;
};

export type HomePageContactFilter = {
  title?: InputMaybe<StringFilter>;
  mapUrl?: InputMaybe<StringFilter>;
  location?: InputMaybe<StringFilter>;
};

export type HomePageNewsletterFilter = {
  title?: InputMaybe<StringFilter>;
};

export type HomePageHeaderFilter = {
  phone?: InputMaybe<StringFilter>;
  email?: InputMaybe<StringFilter>;
  logo?: InputMaybe<ImageFilter>;
  facebookUrl?: InputMaybe<StringFilter>;
  twitterUrl?: InputMaybe<StringFilter>;
  linkedinUrl?: InputMaybe<StringFilter>;
  youtubeUrl?: InputMaybe<StringFilter>;
};

export type HomePageFooterAddressFilter = {
  line1?: InputMaybe<StringFilter>;
  line2?: InputMaybe<StringFilter>;
  line3?: InputMaybe<StringFilter>;
};

export type HomePageFooterFilter = {
  logo?: InputMaybe<ImageFilter>;
  description?: InputMaybe<StringFilter>;
  address?: InputMaybe<HomePageFooterAddressFilter>;
  email?: InputMaybe<StringFilter>;
  copyright?: InputMaybe<StringFilter>;
};

export type HomePageFilter = {
  hero?: InputMaybe<HomePageHeroFilter>;
  about?: InputMaybe<HomePageAboutFilter>;
  help?: InputMaybe<HomePageHelpFilter>;
  calculator?: InputMaybe<HomePageCalculatorFilter>;
  lenders?: InputMaybe<HomePageLendersFilter>;
  contact?: InputMaybe<HomePageContactFilter>;
  newsletter?: InputMaybe<HomePageNewsletterFilter>;
  header?: InputMaybe<HomePageHeaderFilter>;
  footer?: InputMaybe<HomePageFooterFilter>;
};

export type HomePageConnectionEdges = {
  __typename?: 'HomePageConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<HomePage>;
};

export type HomePageConnection = Connection & {
  __typename?: 'HomePageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<HomePageConnectionEdges>>>;
};

export type AboutPageAbout = {
  __typename?: 'AboutPageAbout';
  label?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  paragraph1?: Maybe<Scalars['String']['output']>;
  paragraph2?: Maybe<Scalars['String']['output']>;
  quote?: Maybe<Scalars['String']['output']>;
  quoteAuthor?: Maybe<Scalars['String']['output']>;
  stat1Value?: Maybe<Scalars['String']['output']>;
  stat1Label?: Maybe<Scalars['String']['output']>;
  stat2Value?: Maybe<Scalars['String']['output']>;
  stat2Label?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
};

export type AboutPageHelpFeatures = {
  __typename?: 'AboutPageHelpFeatures';
  icon?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
};

export type AboutPageHelp = {
  __typename?: 'AboutPageHelp';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  statValue?: Maybe<Scalars['String']['output']>;
  statLabel?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  features?: Maybe<Array<Maybe<AboutPageHelpFeatures>>>;
};

export type AboutPageHeader = {
  __typename?: 'AboutPageHeader';
  phone?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  logo?: Maybe<Scalars['String']['output']>;
  facebookUrl?: Maybe<Scalars['String']['output']>;
  twitterUrl?: Maybe<Scalars['String']['output']>;
  linkedinUrl?: Maybe<Scalars['String']['output']>;
  youtubeUrl?: Maybe<Scalars['String']['output']>;
};

export type AboutPageFooterAddress = {
  __typename?: 'AboutPageFooterAddress';
  line1?: Maybe<Scalars['String']['output']>;
  line2?: Maybe<Scalars['String']['output']>;
  line3?: Maybe<Scalars['String']['output']>;
};

export type AboutPageFooter = {
  __typename?: 'AboutPageFooter';
  logo?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  address?: Maybe<AboutPageFooterAddress>;
  email?: Maybe<Scalars['String']['output']>;
  copyright?: Maybe<Scalars['String']['output']>;
};

export type AboutPage = Node & Document & {
  __typename?: 'AboutPage';
  about?: Maybe<AboutPageAbout>;
  help?: Maybe<AboutPageHelp>;
  header?: Maybe<AboutPageHeader>;
  footer?: Maybe<AboutPageFooter>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type AboutPageAboutFilter = {
  label?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  paragraph1?: InputMaybe<StringFilter>;
  paragraph2?: InputMaybe<StringFilter>;
  quote?: InputMaybe<StringFilter>;
  quoteAuthor?: InputMaybe<StringFilter>;
  stat1Value?: InputMaybe<StringFilter>;
  stat1Label?: InputMaybe<StringFilter>;
  stat2Value?: InputMaybe<StringFilter>;
  stat2Label?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
};

export type AboutPageHelpFeaturesFilter = {
  icon?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
};

export type AboutPageHelpFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  statValue?: InputMaybe<StringFilter>;
  statLabel?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  features?: InputMaybe<AboutPageHelpFeaturesFilter>;
};

export type AboutPageHeaderFilter = {
  phone?: InputMaybe<StringFilter>;
  email?: InputMaybe<StringFilter>;
  logo?: InputMaybe<ImageFilter>;
  facebookUrl?: InputMaybe<StringFilter>;
  twitterUrl?: InputMaybe<StringFilter>;
  linkedinUrl?: InputMaybe<StringFilter>;
  youtubeUrl?: InputMaybe<StringFilter>;
};

export type AboutPageFooterAddressFilter = {
  line1?: InputMaybe<StringFilter>;
  line2?: InputMaybe<StringFilter>;
  line3?: InputMaybe<StringFilter>;
};

export type AboutPageFooterFilter = {
  logo?: InputMaybe<ImageFilter>;
  description?: InputMaybe<StringFilter>;
  address?: InputMaybe<AboutPageFooterAddressFilter>;
  email?: InputMaybe<StringFilter>;
  copyright?: InputMaybe<StringFilter>;
};

export type AboutPageFilter = {
  about?: InputMaybe<AboutPageAboutFilter>;
  help?: InputMaybe<AboutPageHelpFilter>;
  header?: InputMaybe<AboutPageHeaderFilter>;
  footer?: InputMaybe<AboutPageFooterFilter>;
};

export type AboutPageConnectionEdges = {
  __typename?: 'AboutPageConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<AboutPage>;
};

export type AboutPageConnection = Connection & {
  __typename?: 'AboutPageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<AboutPageConnectionEdges>>>;
};

export type LendersPageLendersLenderList = {
  __typename?: 'LendersPageLendersLenderList';
  name?: Maybe<Scalars['String']['output']>;
  logo?: Maybe<Scalars['String']['output']>;
};

export type LendersPageLenders = {
  __typename?: 'LendersPageLenders';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  lenderList?: Maybe<Array<Maybe<LendersPageLendersLenderList>>>;
};

export type LendersPageCalculator = {
  __typename?: 'LendersPageCalculator';
  title?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
};

export type LendersPageHeader = {
  __typename?: 'LendersPageHeader';
  phone?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  logo?: Maybe<Scalars['String']['output']>;
  facebookUrl?: Maybe<Scalars['String']['output']>;
  twitterUrl?: Maybe<Scalars['String']['output']>;
  linkedinUrl?: Maybe<Scalars['String']['output']>;
  youtubeUrl?: Maybe<Scalars['String']['output']>;
};

export type LendersPageFooterAddress = {
  __typename?: 'LendersPageFooterAddress';
  line1?: Maybe<Scalars['String']['output']>;
  line2?: Maybe<Scalars['String']['output']>;
  line3?: Maybe<Scalars['String']['output']>;
};

export type LendersPageFooter = {
  __typename?: 'LendersPageFooter';
  logo?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  address?: Maybe<LendersPageFooterAddress>;
  email?: Maybe<Scalars['String']['output']>;
  copyright?: Maybe<Scalars['String']['output']>;
};

export type LendersPage = Node & Document & {
  __typename?: 'LendersPage';
  lenders?: Maybe<LendersPageLenders>;
  calculator?: Maybe<LendersPageCalculator>;
  header?: Maybe<LendersPageHeader>;
  footer?: Maybe<LendersPageFooter>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type LendersPageLendersLenderListFilter = {
  name?: InputMaybe<StringFilter>;
  logo?: InputMaybe<ImageFilter>;
};

export type LendersPageLendersFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  lenderList?: InputMaybe<LendersPageLendersLenderListFilter>;
};

export type LendersPageCalculatorFilter = {
  title?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
};

export type LendersPageHeaderFilter = {
  phone?: InputMaybe<StringFilter>;
  email?: InputMaybe<StringFilter>;
  logo?: InputMaybe<ImageFilter>;
  facebookUrl?: InputMaybe<StringFilter>;
  twitterUrl?: InputMaybe<StringFilter>;
  linkedinUrl?: InputMaybe<StringFilter>;
  youtubeUrl?: InputMaybe<StringFilter>;
};

export type LendersPageFooterAddressFilter = {
  line1?: InputMaybe<StringFilter>;
  line2?: InputMaybe<StringFilter>;
  line3?: InputMaybe<StringFilter>;
};

export type LendersPageFooterFilter = {
  logo?: InputMaybe<ImageFilter>;
  description?: InputMaybe<StringFilter>;
  address?: InputMaybe<LendersPageFooterAddressFilter>;
  email?: InputMaybe<StringFilter>;
  copyright?: InputMaybe<StringFilter>;
};

export type LendersPageFilter = {
  lenders?: InputMaybe<LendersPageLendersFilter>;
  calculator?: InputMaybe<LendersPageCalculatorFilter>;
  header?: InputMaybe<LendersPageHeaderFilter>;
  footer?: InputMaybe<LendersPageFooterFilter>;
};

export type LendersPageConnectionEdges = {
  __typename?: 'LendersPageConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<LendersPage>;
};

export type LendersPageConnection = Connection & {
  __typename?: 'LendersPageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<LendersPageConnectionEdges>>>;
};

export type ContactPageContact = {
  __typename?: 'ContactPageContact';
  title?: Maybe<Scalars['String']['output']>;
  mapUrl?: Maybe<Scalars['String']['output']>;
  location?: Maybe<Scalars['String']['output']>;
};

export type ContactPageHeader = {
  __typename?: 'ContactPageHeader';
  phone?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  logo?: Maybe<Scalars['String']['output']>;
  facebookUrl?: Maybe<Scalars['String']['output']>;
  twitterUrl?: Maybe<Scalars['String']['output']>;
  linkedinUrl?: Maybe<Scalars['String']['output']>;
  youtubeUrl?: Maybe<Scalars['String']['output']>;
};

export type ContactPageFooterAddress = {
  __typename?: 'ContactPageFooterAddress';
  line1?: Maybe<Scalars['String']['output']>;
  line2?: Maybe<Scalars['String']['output']>;
  line3?: Maybe<Scalars['String']['output']>;
};

export type ContactPageFooter = {
  __typename?: 'ContactPageFooter';
  logo?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  address?: Maybe<ContactPageFooterAddress>;
  email?: Maybe<Scalars['String']['output']>;
  copyright?: Maybe<Scalars['String']['output']>;
};

export type ContactPage = Node & Document & {
  __typename?: 'ContactPage';
  contact?: Maybe<ContactPageContact>;
  header?: Maybe<ContactPageHeader>;
  footer?: Maybe<ContactPageFooter>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type ContactPageContactFilter = {
  title?: InputMaybe<StringFilter>;
  mapUrl?: InputMaybe<StringFilter>;
  location?: InputMaybe<StringFilter>;
};

export type ContactPageHeaderFilter = {
  phone?: InputMaybe<StringFilter>;
  email?: InputMaybe<StringFilter>;
  logo?: InputMaybe<ImageFilter>;
  facebookUrl?: InputMaybe<StringFilter>;
  twitterUrl?: InputMaybe<StringFilter>;
  linkedinUrl?: InputMaybe<StringFilter>;
  youtubeUrl?: InputMaybe<StringFilter>;
};

export type ContactPageFooterAddressFilter = {
  line1?: InputMaybe<StringFilter>;
  line2?: InputMaybe<StringFilter>;
  line3?: InputMaybe<StringFilter>;
};

export type ContactPageFooterFilter = {
  logo?: InputMaybe<ImageFilter>;
  description?: InputMaybe<StringFilter>;
  address?: InputMaybe<ContactPageFooterAddressFilter>;
  email?: InputMaybe<StringFilter>;
  copyright?: InputMaybe<StringFilter>;
};

export type ContactPageFilter = {
  contact?: InputMaybe<ContactPageContactFilter>;
  header?: InputMaybe<ContactPageHeaderFilter>;
  footer?: InputMaybe<ContactPageFooterFilter>;
};

export type ContactPageConnectionEdges = {
  __typename?: 'ContactPageConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<ContactPage>;
};

export type ContactPageConnection = Connection & {
  __typename?: 'ContactPageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<ContactPageConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  createFolder: DocumentNode;
  updateHomePage: HomePage;
  createHomePage: HomePage;
  updateAboutPage: AboutPage;
  createAboutPage: AboutPage;
  updateLendersPage: LendersPage;
  createLendersPage: LendersPage;
  updateContactPage: ContactPage;
  createContactPage: ContactPage;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String']['input'];
  relativePath: Scalars['String']['input'];
  template?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentUpdateMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentMutation;
};


export type MutationCreateFolderArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
};


export type MutationUpdateHomePageArgs = {
  relativePath: Scalars['String']['input'];
  params: HomePageMutation;
};


export type MutationCreateHomePageArgs = {
  relativePath: Scalars['String']['input'];
  params: HomePageMutation;
};


export type MutationUpdateAboutPageArgs = {
  relativePath: Scalars['String']['input'];
  params: AboutPageMutation;
};


export type MutationCreateAboutPageArgs = {
  relativePath: Scalars['String']['input'];
  params: AboutPageMutation;
};


export type MutationUpdateLendersPageArgs = {
  relativePath: Scalars['String']['input'];
  params: LendersPageMutation;
};


export type MutationCreateLendersPageArgs = {
  relativePath: Scalars['String']['input'];
  params: LendersPageMutation;
};


export type MutationUpdateContactPageArgs = {
  relativePath: Scalars['String']['input'];
  params: ContactPageMutation;
};


export type MutationCreateContactPageArgs = {
  relativePath: Scalars['String']['input'];
  params: ContactPageMutation;
};

export type DocumentUpdateMutation = {
  homePage?: InputMaybe<HomePageMutation>;
  aboutPage?: InputMaybe<AboutPageMutation>;
  lendersPage?: InputMaybe<LendersPageMutation>;
  contactPage?: InputMaybe<ContactPageMutation>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentMutation = {
  homePage?: InputMaybe<HomePageMutation>;
  aboutPage?: InputMaybe<AboutPageMutation>;
  lendersPage?: InputMaybe<LendersPageMutation>;
  contactPage?: InputMaybe<ContactPageMutation>;
};

export type HomePageHeroMutation = {
  breadcrumb?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  buttonText?: InputMaybe<Scalars['String']['input']>;
  formTitle?: InputMaybe<Scalars['String']['input']>;
  heroImage?: InputMaybe<Scalars['String']['input']>;
};

export type HomePageAboutMutation = {
  label?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  paragraph1?: InputMaybe<Scalars['String']['input']>;
  paragraph2?: InputMaybe<Scalars['String']['input']>;
  quote?: InputMaybe<Scalars['String']['input']>;
  quoteAuthor?: InputMaybe<Scalars['String']['input']>;
  stat1Value?: InputMaybe<Scalars['String']['input']>;
  stat1Label?: InputMaybe<Scalars['String']['input']>;
  stat2Value?: InputMaybe<Scalars['String']['input']>;
  stat2Label?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
};

export type HomePageHelpFeaturesMutation = {
  icon?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
};

export type HomePageHelpMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  statValue?: InputMaybe<Scalars['String']['input']>;
  statLabel?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  features?: InputMaybe<Array<InputMaybe<HomePageHelpFeaturesMutation>>>;
};

export type HomePageCalculatorMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
};

export type HomePageLendersLenderListMutation = {
  name?: InputMaybe<Scalars['String']['input']>;
  logo?: InputMaybe<Scalars['String']['input']>;
};

export type HomePageLendersMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  lenderList?: InputMaybe<Array<InputMaybe<HomePageLendersLenderListMutation>>>;
};

export type HomePageContactMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  mapUrl?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
};

export type HomePageNewsletterMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
};

export type HomePageHeaderMutation = {
  phone?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  logo?: InputMaybe<Scalars['String']['input']>;
  facebookUrl?: InputMaybe<Scalars['String']['input']>;
  twitterUrl?: InputMaybe<Scalars['String']['input']>;
  linkedinUrl?: InputMaybe<Scalars['String']['input']>;
  youtubeUrl?: InputMaybe<Scalars['String']['input']>;
};

export type HomePageFooterAddressMutation = {
  line1?: InputMaybe<Scalars['String']['input']>;
  line2?: InputMaybe<Scalars['String']['input']>;
  line3?: InputMaybe<Scalars['String']['input']>;
};

export type HomePageFooterMutation = {
  logo?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  address?: InputMaybe<HomePageFooterAddressMutation>;
  email?: InputMaybe<Scalars['String']['input']>;
  copyright?: InputMaybe<Scalars['String']['input']>;
};

export type HomePageMutation = {
  hero?: InputMaybe<HomePageHeroMutation>;
  about?: InputMaybe<HomePageAboutMutation>;
  help?: InputMaybe<HomePageHelpMutation>;
  calculator?: InputMaybe<HomePageCalculatorMutation>;
  lenders?: InputMaybe<HomePageLendersMutation>;
  contact?: InputMaybe<HomePageContactMutation>;
  newsletter?: InputMaybe<HomePageNewsletterMutation>;
  header?: InputMaybe<HomePageHeaderMutation>;
  footer?: InputMaybe<HomePageFooterMutation>;
};

export type AboutPageAboutMutation = {
  label?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  paragraph1?: InputMaybe<Scalars['String']['input']>;
  paragraph2?: InputMaybe<Scalars['String']['input']>;
  quote?: InputMaybe<Scalars['String']['input']>;
  quoteAuthor?: InputMaybe<Scalars['String']['input']>;
  stat1Value?: InputMaybe<Scalars['String']['input']>;
  stat1Label?: InputMaybe<Scalars['String']['input']>;
  stat2Value?: InputMaybe<Scalars['String']['input']>;
  stat2Label?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
};

export type AboutPageHelpFeaturesMutation = {
  icon?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
};

export type AboutPageHelpMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  statValue?: InputMaybe<Scalars['String']['input']>;
  statLabel?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  features?: InputMaybe<Array<InputMaybe<AboutPageHelpFeaturesMutation>>>;
};

export type AboutPageHeaderMutation = {
  phone?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  logo?: InputMaybe<Scalars['String']['input']>;
  facebookUrl?: InputMaybe<Scalars['String']['input']>;
  twitterUrl?: InputMaybe<Scalars['String']['input']>;
  linkedinUrl?: InputMaybe<Scalars['String']['input']>;
  youtubeUrl?: InputMaybe<Scalars['String']['input']>;
};

export type AboutPageFooterAddressMutation = {
  line1?: InputMaybe<Scalars['String']['input']>;
  line2?: InputMaybe<Scalars['String']['input']>;
  line3?: InputMaybe<Scalars['String']['input']>;
};

export type AboutPageFooterMutation = {
  logo?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  address?: InputMaybe<AboutPageFooterAddressMutation>;
  email?: InputMaybe<Scalars['String']['input']>;
  copyright?: InputMaybe<Scalars['String']['input']>;
};

export type AboutPageMutation = {
  about?: InputMaybe<AboutPageAboutMutation>;
  help?: InputMaybe<AboutPageHelpMutation>;
  header?: InputMaybe<AboutPageHeaderMutation>;
  footer?: InputMaybe<AboutPageFooterMutation>;
};

export type LendersPageLendersLenderListMutation = {
  name?: InputMaybe<Scalars['String']['input']>;
  logo?: InputMaybe<Scalars['String']['input']>;
};

export type LendersPageLendersMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  lenderList?: InputMaybe<Array<InputMaybe<LendersPageLendersLenderListMutation>>>;
};

export type LendersPageCalculatorMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
};

export type LendersPageHeaderMutation = {
  phone?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  logo?: InputMaybe<Scalars['String']['input']>;
  facebookUrl?: InputMaybe<Scalars['String']['input']>;
  twitterUrl?: InputMaybe<Scalars['String']['input']>;
  linkedinUrl?: InputMaybe<Scalars['String']['input']>;
  youtubeUrl?: InputMaybe<Scalars['String']['input']>;
};

export type LendersPageFooterAddressMutation = {
  line1?: InputMaybe<Scalars['String']['input']>;
  line2?: InputMaybe<Scalars['String']['input']>;
  line3?: InputMaybe<Scalars['String']['input']>;
};

export type LendersPageFooterMutation = {
  logo?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  address?: InputMaybe<LendersPageFooterAddressMutation>;
  email?: InputMaybe<Scalars['String']['input']>;
  copyright?: InputMaybe<Scalars['String']['input']>;
};

export type LendersPageMutation = {
  lenders?: InputMaybe<LendersPageLendersMutation>;
  calculator?: InputMaybe<LendersPageCalculatorMutation>;
  header?: InputMaybe<LendersPageHeaderMutation>;
  footer?: InputMaybe<LendersPageFooterMutation>;
};

export type ContactPageContactMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  mapUrl?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
};

export type ContactPageHeaderMutation = {
  phone?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  logo?: InputMaybe<Scalars['String']['input']>;
  facebookUrl?: InputMaybe<Scalars['String']['input']>;
  twitterUrl?: InputMaybe<Scalars['String']['input']>;
  linkedinUrl?: InputMaybe<Scalars['String']['input']>;
  youtubeUrl?: InputMaybe<Scalars['String']['input']>;
};

export type ContactPageFooterAddressMutation = {
  line1?: InputMaybe<Scalars['String']['input']>;
  line2?: InputMaybe<Scalars['String']['input']>;
  line3?: InputMaybe<Scalars['String']['input']>;
};

export type ContactPageFooterMutation = {
  logo?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  address?: InputMaybe<ContactPageFooterAddressMutation>;
  email?: InputMaybe<Scalars['String']['input']>;
  copyright?: InputMaybe<Scalars['String']['input']>;
};

export type ContactPageMutation = {
  contact?: InputMaybe<ContactPageContactMutation>;
  header?: InputMaybe<ContactPageHeaderMutation>;
  footer?: InputMaybe<ContactPageFooterMutation>;
};

export type HomePagePartsFragment = { __typename: 'HomePage', hero?: { __typename: 'HomePageHero', breadcrumb?: string | null, title?: string | null, buttonText?: string | null, formTitle?: string | null, heroImage?: string | null } | null, about?: { __typename: 'HomePageAbout', label?: string | null, title?: string | null, paragraph1?: string | null, paragraph2?: string | null, quote?: string | null, quoteAuthor?: string | null, stat1Value?: string | null, stat1Label?: string | null, stat2Value?: string | null, stat2Label?: string | null, image?: string | null } | null, help?: { __typename: 'HomePageHelp', title?: string | null, description?: string | null, statValue?: string | null, statLabel?: string | null, image?: string | null, features?: Array<{ __typename: 'HomePageHelpFeatures', icon?: string | null, title?: string | null, description?: string | null } | null> | null } | null, calculator?: { __typename: 'HomePageCalculator', title?: string | null, description?: string | null } | null, lenders?: { __typename: 'HomePageLenders', title?: string | null, description?: string | null, lenderList?: Array<{ __typename: 'HomePageLendersLenderList', name?: string | null, logo?: string | null } | null> | null } | null, contact?: { __typename: 'HomePageContact', title?: string | null, mapUrl?: string | null, location?: string | null } | null, newsletter?: { __typename: 'HomePageNewsletter', title?: string | null } | null, header?: { __typename: 'HomePageHeader', phone?: string | null, email?: string | null, logo?: string | null, facebookUrl?: string | null, twitterUrl?: string | null, linkedinUrl?: string | null, youtubeUrl?: string | null } | null, footer?: { __typename: 'HomePageFooter', logo?: string | null, description?: string | null, email?: string | null, copyright?: string | null, address?: { __typename: 'HomePageFooterAddress', line1?: string | null, line2?: string | null, line3?: string | null } | null } | null };

export type AboutPagePartsFragment = { __typename: 'AboutPage', about?: { __typename: 'AboutPageAbout', label?: string | null, title?: string | null, paragraph1?: string | null, paragraph2?: string | null, quote?: string | null, quoteAuthor?: string | null, stat1Value?: string | null, stat1Label?: string | null, stat2Value?: string | null, stat2Label?: string | null, image?: string | null } | null, help?: { __typename: 'AboutPageHelp', title?: string | null, description?: string | null, statValue?: string | null, statLabel?: string | null, image?: string | null, features?: Array<{ __typename: 'AboutPageHelpFeatures', icon?: string | null, title?: string | null, description?: string | null } | null> | null } | null, header?: { __typename: 'AboutPageHeader', phone?: string | null, email?: string | null, logo?: string | null, facebookUrl?: string | null, twitterUrl?: string | null, linkedinUrl?: string | null, youtubeUrl?: string | null } | null, footer?: { __typename: 'AboutPageFooter', logo?: string | null, description?: string | null, email?: string | null, copyright?: string | null, address?: { __typename: 'AboutPageFooterAddress', line1?: string | null, line2?: string | null, line3?: string | null } | null } | null };

export type LendersPagePartsFragment = { __typename: 'LendersPage', lenders?: { __typename: 'LendersPageLenders', title?: string | null, description?: string | null, lenderList?: Array<{ __typename: 'LendersPageLendersLenderList', name?: string | null, logo?: string | null } | null> | null } | null, calculator?: { __typename: 'LendersPageCalculator', title?: string | null, description?: string | null } | null, header?: { __typename: 'LendersPageHeader', phone?: string | null, email?: string | null, logo?: string | null, facebookUrl?: string | null, twitterUrl?: string | null, linkedinUrl?: string | null, youtubeUrl?: string | null } | null, footer?: { __typename: 'LendersPageFooter', logo?: string | null, description?: string | null, email?: string | null, copyright?: string | null, address?: { __typename: 'LendersPageFooterAddress', line1?: string | null, line2?: string | null, line3?: string | null } | null } | null };

export type ContactPagePartsFragment = { __typename: 'ContactPage', contact?: { __typename: 'ContactPageContact', title?: string | null, mapUrl?: string | null, location?: string | null } | null, header?: { __typename: 'ContactPageHeader', phone?: string | null, email?: string | null, logo?: string | null, facebookUrl?: string | null, twitterUrl?: string | null, linkedinUrl?: string | null, youtubeUrl?: string | null } | null, footer?: { __typename: 'ContactPageFooter', logo?: string | null, description?: string | null, email?: string | null, copyright?: string | null, address?: { __typename: 'ContactPageFooterAddress', line1?: string | null, line2?: string | null, line3?: string | null } | null } | null };

export type HomePageQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type HomePageQuery = { __typename?: 'Query', homePage: { __typename: 'HomePage', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, hero?: { __typename: 'HomePageHero', breadcrumb?: string | null, title?: string | null, buttonText?: string | null, formTitle?: string | null, heroImage?: string | null } | null, about?: { __typename: 'HomePageAbout', label?: string | null, title?: string | null, paragraph1?: string | null, paragraph2?: string | null, quote?: string | null, quoteAuthor?: string | null, stat1Value?: string | null, stat1Label?: string | null, stat2Value?: string | null, stat2Label?: string | null, image?: string | null } | null, help?: { __typename: 'HomePageHelp', title?: string | null, description?: string | null, statValue?: string | null, statLabel?: string | null, image?: string | null, features?: Array<{ __typename: 'HomePageHelpFeatures', icon?: string | null, title?: string | null, description?: string | null } | null> | null } | null, calculator?: { __typename: 'HomePageCalculator', title?: string | null, description?: string | null } | null, lenders?: { __typename: 'HomePageLenders', title?: string | null, description?: string | null, lenderList?: Array<{ __typename: 'HomePageLendersLenderList', name?: string | null, logo?: string | null } | null> | null } | null, contact?: { __typename: 'HomePageContact', title?: string | null, mapUrl?: string | null, location?: string | null } | null, newsletter?: { __typename: 'HomePageNewsletter', title?: string | null } | null, header?: { __typename: 'HomePageHeader', phone?: string | null, email?: string | null, logo?: string | null, facebookUrl?: string | null, twitterUrl?: string | null, linkedinUrl?: string | null, youtubeUrl?: string | null } | null, footer?: { __typename: 'HomePageFooter', logo?: string | null, description?: string | null, email?: string | null, copyright?: string | null, address?: { __typename: 'HomePageFooterAddress', line1?: string | null, line2?: string | null, line3?: string | null } | null } | null } };

export type HomePageConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<HomePageFilter>;
}>;


export type HomePageConnectionQuery = { __typename?: 'Query', homePageConnection: { __typename?: 'HomePageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'HomePageConnectionEdges', cursor: string, node?: { __typename: 'HomePage', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, hero?: { __typename: 'HomePageHero', breadcrumb?: string | null, title?: string | null, buttonText?: string | null, formTitle?: string | null, heroImage?: string | null } | null, about?: { __typename: 'HomePageAbout', label?: string | null, title?: string | null, paragraph1?: string | null, paragraph2?: string | null, quote?: string | null, quoteAuthor?: string | null, stat1Value?: string | null, stat1Label?: string | null, stat2Value?: string | null, stat2Label?: string | null, image?: string | null } | null, help?: { __typename: 'HomePageHelp', title?: string | null, description?: string | null, statValue?: string | null, statLabel?: string | null, image?: string | null, features?: Array<{ __typename: 'HomePageHelpFeatures', icon?: string | null, title?: string | null, description?: string | null } | null> | null } | null, calculator?: { __typename: 'HomePageCalculator', title?: string | null, description?: string | null } | null, lenders?: { __typename: 'HomePageLenders', title?: string | null, description?: string | null, lenderList?: Array<{ __typename: 'HomePageLendersLenderList', name?: string | null, logo?: string | null } | null> | null } | null, contact?: { __typename: 'HomePageContact', title?: string | null, mapUrl?: string | null, location?: string | null } | null, newsletter?: { __typename: 'HomePageNewsletter', title?: string | null } | null, header?: { __typename: 'HomePageHeader', phone?: string | null, email?: string | null, logo?: string | null, facebookUrl?: string | null, twitterUrl?: string | null, linkedinUrl?: string | null, youtubeUrl?: string | null } | null, footer?: { __typename: 'HomePageFooter', logo?: string | null, description?: string | null, email?: string | null, copyright?: string | null, address?: { __typename: 'HomePageFooterAddress', line1?: string | null, line2?: string | null, line3?: string | null } | null } | null } | null } | null> | null } };

export type AboutPageQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type AboutPageQuery = { __typename?: 'Query', aboutPage: { __typename: 'AboutPage', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, about?: { __typename: 'AboutPageAbout', label?: string | null, title?: string | null, paragraph1?: string | null, paragraph2?: string | null, quote?: string | null, quoteAuthor?: string | null, stat1Value?: string | null, stat1Label?: string | null, stat2Value?: string | null, stat2Label?: string | null, image?: string | null } | null, help?: { __typename: 'AboutPageHelp', title?: string | null, description?: string | null, statValue?: string | null, statLabel?: string | null, image?: string | null, features?: Array<{ __typename: 'AboutPageHelpFeatures', icon?: string | null, title?: string | null, description?: string | null } | null> | null } | null, header?: { __typename: 'AboutPageHeader', phone?: string | null, email?: string | null, logo?: string | null, facebookUrl?: string | null, twitterUrl?: string | null, linkedinUrl?: string | null, youtubeUrl?: string | null } | null, footer?: { __typename: 'AboutPageFooter', logo?: string | null, description?: string | null, email?: string | null, copyright?: string | null, address?: { __typename: 'AboutPageFooterAddress', line1?: string | null, line2?: string | null, line3?: string | null } | null } | null } };

export type AboutPageConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<AboutPageFilter>;
}>;


export type AboutPageConnectionQuery = { __typename?: 'Query', aboutPageConnection: { __typename?: 'AboutPageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'AboutPageConnectionEdges', cursor: string, node?: { __typename: 'AboutPage', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, about?: { __typename: 'AboutPageAbout', label?: string | null, title?: string | null, paragraph1?: string | null, paragraph2?: string | null, quote?: string | null, quoteAuthor?: string | null, stat1Value?: string | null, stat1Label?: string | null, stat2Value?: string | null, stat2Label?: string | null, image?: string | null } | null, help?: { __typename: 'AboutPageHelp', title?: string | null, description?: string | null, statValue?: string | null, statLabel?: string | null, image?: string | null, features?: Array<{ __typename: 'AboutPageHelpFeatures', icon?: string | null, title?: string | null, description?: string | null } | null> | null } | null, header?: { __typename: 'AboutPageHeader', phone?: string | null, email?: string | null, logo?: string | null, facebookUrl?: string | null, twitterUrl?: string | null, linkedinUrl?: string | null, youtubeUrl?: string | null } | null, footer?: { __typename: 'AboutPageFooter', logo?: string | null, description?: string | null, email?: string | null, copyright?: string | null, address?: { __typename: 'AboutPageFooterAddress', line1?: string | null, line2?: string | null, line3?: string | null } | null } | null } | null } | null> | null } };

export type LendersPageQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type LendersPageQuery = { __typename?: 'Query', lendersPage: { __typename: 'LendersPage', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, lenders?: { __typename: 'LendersPageLenders', title?: string | null, description?: string | null, lenderList?: Array<{ __typename: 'LendersPageLendersLenderList', name?: string | null, logo?: string | null } | null> | null } | null, calculator?: { __typename: 'LendersPageCalculator', title?: string | null, description?: string | null } | null, header?: { __typename: 'LendersPageHeader', phone?: string | null, email?: string | null, logo?: string | null, facebookUrl?: string | null, twitterUrl?: string | null, linkedinUrl?: string | null, youtubeUrl?: string | null } | null, footer?: { __typename: 'LendersPageFooter', logo?: string | null, description?: string | null, email?: string | null, copyright?: string | null, address?: { __typename: 'LendersPageFooterAddress', line1?: string | null, line2?: string | null, line3?: string | null } | null } | null } };

export type LendersPageConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<LendersPageFilter>;
}>;


export type LendersPageConnectionQuery = { __typename?: 'Query', lendersPageConnection: { __typename?: 'LendersPageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'LendersPageConnectionEdges', cursor: string, node?: { __typename: 'LendersPage', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, lenders?: { __typename: 'LendersPageLenders', title?: string | null, description?: string | null, lenderList?: Array<{ __typename: 'LendersPageLendersLenderList', name?: string | null, logo?: string | null } | null> | null } | null, calculator?: { __typename: 'LendersPageCalculator', title?: string | null, description?: string | null } | null, header?: { __typename: 'LendersPageHeader', phone?: string | null, email?: string | null, logo?: string | null, facebookUrl?: string | null, twitterUrl?: string | null, linkedinUrl?: string | null, youtubeUrl?: string | null } | null, footer?: { __typename: 'LendersPageFooter', logo?: string | null, description?: string | null, email?: string | null, copyright?: string | null, address?: { __typename: 'LendersPageFooterAddress', line1?: string | null, line2?: string | null, line3?: string | null } | null } | null } | null } | null> | null } };

export type ContactPageQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type ContactPageQuery = { __typename?: 'Query', contactPage: { __typename: 'ContactPage', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, contact?: { __typename: 'ContactPageContact', title?: string | null, mapUrl?: string | null, location?: string | null } | null, header?: { __typename: 'ContactPageHeader', phone?: string | null, email?: string | null, logo?: string | null, facebookUrl?: string | null, twitterUrl?: string | null, linkedinUrl?: string | null, youtubeUrl?: string | null } | null, footer?: { __typename: 'ContactPageFooter', logo?: string | null, description?: string | null, email?: string | null, copyright?: string | null, address?: { __typename: 'ContactPageFooterAddress', line1?: string | null, line2?: string | null, line3?: string | null } | null } | null } };

export type ContactPageConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<ContactPageFilter>;
}>;


export type ContactPageConnectionQuery = { __typename?: 'Query', contactPageConnection: { __typename?: 'ContactPageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'ContactPageConnectionEdges', cursor: string, node?: { __typename: 'ContactPage', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, contact?: { __typename: 'ContactPageContact', title?: string | null, mapUrl?: string | null, location?: string | null } | null, header?: { __typename: 'ContactPageHeader', phone?: string | null, email?: string | null, logo?: string | null, facebookUrl?: string | null, twitterUrl?: string | null, linkedinUrl?: string | null, youtubeUrl?: string | null } | null, footer?: { __typename: 'ContactPageFooter', logo?: string | null, description?: string | null, email?: string | null, copyright?: string | null, address?: { __typename: 'ContactPageFooterAddress', line1?: string | null, line2?: string | null, line3?: string | null } | null } | null } | null } | null> | null } };

export const HomePagePartsFragmentDoc = gql`
    fragment HomePageParts on HomePage {
  __typename
  hero {
    __typename
    breadcrumb
    title
    buttonText
    formTitle
    heroImage
  }
  about {
    __typename
    label
    title
    paragraph1
    paragraph2
    quote
    quoteAuthor
    stat1Value
    stat1Label
    stat2Value
    stat2Label
    image
  }
  help {
    __typename
    title
    description
    statValue
    statLabel
    image
    features {
      __typename
      icon
      title
      description
    }
  }
  calculator {
    __typename
    title
    description
  }
  lenders {
    __typename
    title
    description
    lenderList {
      __typename
      name
      logo
    }
  }
  contact {
    __typename
    title
    mapUrl
    location
  }
  newsletter {
    __typename
    title
  }
  header {
    __typename
    phone
    email
    logo
    facebookUrl
    twitterUrl
    linkedinUrl
    youtubeUrl
  }
  footer {
    __typename
    logo
    description
    address {
      __typename
      line1
      line2
      line3
    }
    email
    copyright
  }
}
    `;
export const AboutPagePartsFragmentDoc = gql`
    fragment AboutPageParts on AboutPage {
  __typename
  about {
    __typename
    label
    title
    paragraph1
    paragraph2
    quote
    quoteAuthor
    stat1Value
    stat1Label
    stat2Value
    stat2Label
    image
  }
  help {
    __typename
    title
    description
    statValue
    statLabel
    image
    features {
      __typename
      icon
      title
      description
    }
  }
  header {
    __typename
    phone
    email
    logo
    facebookUrl
    twitterUrl
    linkedinUrl
    youtubeUrl
  }
  footer {
    __typename
    logo
    description
    address {
      __typename
      line1
      line2
      line3
    }
    email
    copyright
  }
}
    `;
export const LendersPagePartsFragmentDoc = gql`
    fragment LendersPageParts on LendersPage {
  __typename
  lenders {
    __typename
    title
    description
    lenderList {
      __typename
      name
      logo
    }
  }
  calculator {
    __typename
    title
    description
  }
  header {
    __typename
    phone
    email
    logo
    facebookUrl
    twitterUrl
    linkedinUrl
    youtubeUrl
  }
  footer {
    __typename
    logo
    description
    address {
      __typename
      line1
      line2
      line3
    }
    email
    copyright
  }
}
    `;
export const ContactPagePartsFragmentDoc = gql`
    fragment ContactPageParts on ContactPage {
  __typename
  contact {
    __typename
    title
    mapUrl
    location
  }
  header {
    __typename
    phone
    email
    logo
    facebookUrl
    twitterUrl
    linkedinUrl
    youtubeUrl
  }
  footer {
    __typename
    logo
    description
    address {
      __typename
      line1
      line2
      line3
    }
    email
    copyright
  }
}
    `;
export const HomePageDocument = gql`
    query homePage($relativePath: String!) {
  homePage(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...HomePageParts
  }
}
    ${HomePagePartsFragmentDoc}`;
export const HomePageConnectionDocument = gql`
    query homePageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: HomePageFilter) {
  homePageConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...HomePageParts
      }
    }
  }
}
    ${HomePagePartsFragmentDoc}`;
export const AboutPageDocument = gql`
    query aboutPage($relativePath: String!) {
  aboutPage(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...AboutPageParts
  }
}
    ${AboutPagePartsFragmentDoc}`;
export const AboutPageConnectionDocument = gql`
    query aboutPageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: AboutPageFilter) {
  aboutPageConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...AboutPageParts
      }
    }
  }
}
    ${AboutPagePartsFragmentDoc}`;
export const LendersPageDocument = gql`
    query lendersPage($relativePath: String!) {
  lendersPage(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...LendersPageParts
  }
}
    ${LendersPagePartsFragmentDoc}`;
export const LendersPageConnectionDocument = gql`
    query lendersPageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: LendersPageFilter) {
  lendersPageConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...LendersPageParts
      }
    }
  }
}
    ${LendersPagePartsFragmentDoc}`;
export const ContactPageDocument = gql`
    query contactPage($relativePath: String!) {
  contactPage(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...ContactPageParts
  }
}
    ${ContactPagePartsFragmentDoc}`;
export const ContactPageConnectionDocument = gql`
    query contactPageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: ContactPageFilter) {
  contactPageConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...ContactPageParts
      }
    }
  }
}
    ${ContactPagePartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      homePage(variables: HomePageQueryVariables, options?: C): Promise<{data: HomePageQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: HomePageQueryVariables, query: string}> {
        return requester<{data: HomePageQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: HomePageQueryVariables, query: string}, HomePageQueryVariables>(HomePageDocument, variables, options);
      },
    homePageConnection(variables?: HomePageConnectionQueryVariables, options?: C): Promise<{data: HomePageConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: HomePageConnectionQueryVariables, query: string}> {
        return requester<{data: HomePageConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: HomePageConnectionQueryVariables, query: string}, HomePageConnectionQueryVariables>(HomePageConnectionDocument, variables, options);
      },
    aboutPage(variables: AboutPageQueryVariables, options?: C): Promise<{data: AboutPageQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: AboutPageQueryVariables, query: string}> {
        return requester<{data: AboutPageQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: AboutPageQueryVariables, query: string}, AboutPageQueryVariables>(AboutPageDocument, variables, options);
      },
    aboutPageConnection(variables?: AboutPageConnectionQueryVariables, options?: C): Promise<{data: AboutPageConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: AboutPageConnectionQueryVariables, query: string}> {
        return requester<{data: AboutPageConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: AboutPageConnectionQueryVariables, query: string}, AboutPageConnectionQueryVariables>(AboutPageConnectionDocument, variables, options);
      },
    lendersPage(variables: LendersPageQueryVariables, options?: C): Promise<{data: LendersPageQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: LendersPageQueryVariables, query: string}> {
        return requester<{data: LendersPageQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: LendersPageQueryVariables, query: string}, LendersPageQueryVariables>(LendersPageDocument, variables, options);
      },
    lendersPageConnection(variables?: LendersPageConnectionQueryVariables, options?: C): Promise<{data: LendersPageConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: LendersPageConnectionQueryVariables, query: string}> {
        return requester<{data: LendersPageConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: LendersPageConnectionQueryVariables, query: string}, LendersPageConnectionQueryVariables>(LendersPageConnectionDocument, variables, options);
      },
    contactPage(variables: ContactPageQueryVariables, options?: C): Promise<{data: ContactPageQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: ContactPageQueryVariables, query: string}> {
        return requester<{data: ContactPageQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: ContactPageQueryVariables, query: string}, ContactPageQueryVariables>(ContactPageDocument, variables, options);
      },
    contactPageConnection(variables?: ContactPageConnectionQueryVariables, options?: C): Promise<{data: ContactPageConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: ContactPageConnectionQueryVariables, query: string}> {
        return requester<{data: ContactPageConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: ContactPageConnectionQueryVariables, query: string}, ContactPageConnectionQueryVariables>(ContactPageConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (
  client: TinaClient,
) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: {
      branch?: string,
      /**
       * Aside from `method` and `body`, all fetch options are passed
       * through to underlying fetch request
       */
      fetchOptions?: Omit<Parameters<typeof fetch>[1], 'body' | 'method'>,
    },
    client
  ) => Promise<any> = async (doc, vars, options) => {
    let url = client.apiUrl
    if (options?.branch) {
      const index = client.apiUrl.lastIndexOf('/')
      url = client.apiUrl.substring(0, index + 1) + options.branch
    }
    const data = await client.request({
      query: doc,
      variables: vars,
      url,
    }, options)

    return { data: data?.data, errors: data?.errors, query: doc, variables: vars || {} }
  }

  return requester
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(
      createClient({
        url: "https://content.tinajs.io/1.6/content/4283e962-a6ee-457f-b47a-23cc4a5ae779/github/main",
        queries,
      })
    )
  )

export const queries = (
  client: TinaClient,
) => {
  const requester = generateRequester(client)
  return getSdk(requester)
}

  